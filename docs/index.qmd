---
title: "another website"
format: html
embed-resources: true #embed all the resources to this html file
editor: 
  markdown: 
    wrap: sentence
---

# Hw 5: Portfolio

## Exercise 1

![population density along the River Yamuna](https://i.redd.it/q4qc6z18q2he1.jpeg) see [this link](https://www.reddit.com/r/dataisbeautiful/comments/1ihca96/oc_a_river_of_faith_a_river_in_crisis_the_yamunas/#lightbox) for more details.

b.  What marks are being used?
    What variables are mapped to which properties?

    The marks being used are bars.
    The variable population is mapped to color and height/position—the X and Y Coordinates map spatial locations along the river's course.
    The height of the bars represents population density.
    The color also represents population density with warmer colors (like orange and yellow) showing higher population density and darker colors (like purple) for lower density.
    Annotations: Text labels for key locations (Delhi, Agra, Prayagraj) help orient viewers geographically.

c.  What is the main story of this graphic?

    The main story that the Graphic is trying to convey is the population density along the Yamuna River.
    The graph highlights how density increases near major urban centers (like Delhi and Prayagraj) and is lower in other areas.
    It emphasizes the spatial relationship between the river and human settlements.

d.  What makes it a good graphic?

    The graph has clear visualizations.
    The height and color mapping make population density visually intuitive and stand out more.
    The graph uses annotations to give the readers contextual information for significant locations to provide spatial awareness.
    The 3D perspective effectively highlights density variations and is intuitive.
    The minimal background helps focus attention on the data, without much disturbance.

e.  What features do you think you would know how to implement in Vega-Lite?

    I think I would be able to use the bin feature to bin each population density.
    I would also be able to map the colors based on population density values.
    I could attempt to put labels and city names on my graph, but I wouldn't know how to put arrows and make sure that the city names are right where I want them to be.

f.  Are there any features of the graphic that you would not know how to do in Vega-Lite?
    If so, list them.

    I don't think I would be able to lay my data over a geographical map like what the graph shows.
    Putting the labels at certain specific area would be challenging.
    I'm not sure if I am able to make a 3-D graph either since the graph above uses x,y, and z.

## Exercise 2

```{r}
library(altair)
library(vegawidget)
library(readr)
library(dplyr)
library(vegalite)
library(lubridate)
library(vegabrite)
```

```{r}
weather_data <- read_csv("https://calvin-data304.netlify.app/data/weather-with-dates.csv")
head(weather_data)
```

### Exercise 1

```{r}
seattle_weather <- weather_data |>
  filter(location == "Seattle")
```

```{r}
vl_chart(width = 800, height = 400) |>
  vl_mark_line() |>
  vl_encode_x("date:T", title = "Date") |>
  vl_encode_y("temp_max:Q", title = "High Temperature") |>
  vl_add_data(seattle_weather) |>
  vl_add_properties(title = "High Temperature in Seattle Each Day")
```


## Exercise 2

```{r}
#| label: load_data
seattle_weather <- weather_data |>
  mutate(date = as.Date(date))
```

```{r}
weather_plot_data <- weather_data |>
  mutate(
    year = factor(year(date)),
    month = month(date, label = TRUE, abbr = TRUE),
    month_num = month(date),
    day_of_month = day(date)
  ) |>
  filter(day_of_month <= 31) |>  # Ensure the x-axis stops at 31
  group_by(day_of_month, month, month_num, year) |>
  summarise(avg_temp = mean(temp_max, na.rm = TRUE), .groups = "drop")

# Create the faceted plot sorted by month order
vl_chart(width = 1000, height = 400) |>
  vl_mark_point() |>
  vl_encode_x("day_of_month:Q", title = "Day of the Month (1 to 31)") |>
  vl_encode_y("avg_temp:Q", title = "Average Temperature (°F)") |>
  vl_encode_color("year:N", title = "Year") |>
  vl_facet_row("month:N", title = "Month", sort = list(field = "month_num", order = "ascending")) |>
  vl_add_data(weather_plot_data) |>
  vl_add_properties(title = "Temperature in Seattle (Faceted by Month)")
```
